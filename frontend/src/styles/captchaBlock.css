.captcha-block {
    position: relative;
    margin: 10px;
    display: flex;
    flex-direction: column;
    gap: 5px;
    width: 400px;
    height: 580px;
    background-color: white;
    overflow: hidden;
    opacity: 0;
    transition: opacity .3s;
}
.captcha-block.display-on {
    opacity: 1;
}


.block-flash {
    position: absolute;
    top: 60%;
    left: -10%;
    box-shadow:
        0 0 500px 250px var(--bg-1),
        0 0 1500px 1000px var(--bg-1),
        0 0 2000px 1500px var(--bg-1)
    ;
    transition: box-shadow .6s;
    pointer-events: none; /* Allow clicks to pass through */
    z-index: -1; /* Put behind other elements */
}
.block-flash.display-on {
    box-shadow:
        0 0 0 var(--bg-1),
        0 0 0 rgba(255,255,255),
        0 0 0 var(--blue-1)
    ;
}


.captcha-banner {
    flex-grow: 2;
    flex-basis: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: 5px 5px 0 5px;
    padding-left: 15px;
    background-color: var(--blue-1);
}

.captcha-banner > p {
    color: white;
    font-size: 12px;
}

.captcha-banner > h1 {
    color: white;
    font-size: 24px;
}

.captcha-image-grid {
    flex-shrink: 0;
    flex-grow: 0;
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    grid-template-rows: repeat(3, minmax(0, 1fr));
    gap: 3px;
    margin: 0 5px;
}

.captcha-image {
    background-color: black;
    cursor: pointer;
    border: 0 solid white;
    transition: border .3s, transform .3s, box-shadow .3s; /* Smooth transitions */
    color: white;
        background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    pointer-events: auto; /* Ensure clicks work */
    -webkit-user-select: none; /* Prevent text selection - Safari */
    user-select: none; /* Prevent text selection */
    position: relative; /* Establish stacking context */
    z-index: 10; /* Ensure it's above other elements */
}

.captcha-image:hover {
    border: 2px solid yellow; /* Visual feedback for hover */
    box-shadow: 0 0 10px rgba(255,255,0,0.5);
}

.captcha-image.clicked {
    border: 3px solid #00ff00 !important; /* Green border */
    box-shadow: 0 0 20px rgba(0,255,0,1) !important; /* Bright green glow */
    outline: 2px solid white !important; /* White outline */
    filter: brightness(1.2) !important; /* Make it brighter */
    /* Remove transform from here to avoid conflicts */
}



/* Add clicked state for different challenge types */
.captcha-image.clicked:not(.skew):not(.rotate):not(.movement) {
    transform: scale(0.95) !important;
}

.captcha-image.clicked.skew {
    border: 3px solid #00ff00 !important;
    box-shadow: 0 0 20px rgba(0,255,0,1) !important;
    outline: 2px solid white !important;
    filter: brightness(1.2) !important;
}

.captcha-image.clicked.rotate {
    border: 3px solid #00ff00 !important;
    box-shadow: 0 0 20px rgba(0,255,0,1) !important;
    outline: 2px solid white !important;
    filter: brightness(1.2) !important;
}

.captcha-image.clicked.movement {
    border: 3px solid #00ff00 !important;
    box-shadow: 0 0 20px rgba(0,255,0,1) !important;
    outline: 2px solid white !important;
    filter: brightness(1.2) !important;
}

.captcha-footer {
    display: flex;
    justify-content: end;
    align-items: center;
    border-top: 1px solid lightgrey;
    flex-grow: 1;
    flex-basis: 0;
    padding: 10px;
}

.verify-button {
    padding: 10px 15px;
    background-color: var(--blue-1);
    border: none;
    color: white;
    font-size: 16px;
    border-radius: 2px;
}

.verify-button:active {
    box-shadow: inset 0 0 5px rgba(0,0,0,.5);
}

/* challenge styles */

    /* block level */
.captcha-block.four {
    width: 450px;
    height: 652.5px;
}

    /* grid level */
.captcha-image-grid.four {
    grid-template-columns: repeat(4, minmax(0, 1fr));
    grid-template-rows: repeat(4, minmax(0, 1fr));
}

/* image level */
.captcha-image.negative {
    filter: invert(1);
}

.captcha-image.negative:hover {
    filter: invert(0);
}

.captcha-image.skew:hover:not(.clicked), .captcha-image.rotate:hover:not(.clicked) {
    transform: skew(0) rotate(0) !important;
}

/* Ensure clicked state persists on hover with strong visual */
.captcha-image.clicked:hover {
    border: 3px solid #00ff00 !important;
    box-shadow: 0 0 25px rgba(0,255,0,1) !important;
    outline: 2px solid white !important;
    filter: brightness(1.3) !important;
}

/* Clicked negative images */
.captcha-image.negative.clicked {
    filter: invert(1) brightness(1.2) !important;
    border: 3px solid #00ff00 !important;
    box-shadow: 0 0 20px rgba(0,255,0,1) !important;
}

.captcha-image.movement {
    position: relative;
    animation: 1s linear infinite alternate movement;
}

@keyframes movement {
    0% {

    }
    100%{
        left: 0px;
        top: 0px;
    }
}


/* Redesigned Success Badge */
.captcha-image.clicked::after {
    content: '';
    position: absolute;
    top: 10px;
    right: 10px;
    width: 24px;
    height: 24px;
    background-color: #4CAF50; /* Green color for success */
    border-radius: 50%;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    z-index: 101; /* Ensure it's above the image border */

    /* Embed the checkmark SVG directly as a background image */
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" stroke="white" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7"/></svg>');
    background-repeat: no-repeat;
    background-position: center;
    background-size: 60%;

    animation: badge-appear 0.3s ease-out;
}

/* Remove the ::before pseudo-element as it's no longer needed */
.captcha-image.clicked::before {
    display: none;
}

@keyframes badge-appear {
    from {
        transform: scale(0);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}

/* Remove the old checkmark animation as it's no longer needed */
@keyframes checkmark-draw {
    /* This is no longer needed */
}
